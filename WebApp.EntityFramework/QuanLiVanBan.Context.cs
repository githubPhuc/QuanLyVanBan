//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToolsApp.EntityFramework
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class QuanLiVanBanEntities : DbContext
    {
        public QuanLiVanBanEntities()
            : base("name=QuanLiVanBanEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DanhSachPhongban> DanhSachPhongbans { get; set; }
        public virtual DbSet<DiaDiem> DiaDiems { get; set; }
        public virtual DbSet<loaivanban> loaivanbans { get; set; }
        public virtual DbSet<Menu> Menus { get; set; }
        public virtual DbSet<Page> Pages { get; set; }
        public virtual DbSet<thongtinvanban> thongtinvanbans { get; set; }
        public virtual DbSet<User_Page> User_Page { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<VanBanDiChuyen> VanBanDiChuyens { get; set; }
    
        public virtual ObjectResult<sp_thongkeChart_Result> sp_thongkeChart(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_thongkeChart_Result>("sp_thongkeChart", monthParameter, yearParameter);
        }
    
        public virtual ObjectResult<sp_thongke_Result> sp_thongke(Nullable<int> month, Nullable<int> year)
        {
            var monthParameter = month.HasValue ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_thongke_Result>("sp_thongke", monthParameter, yearParameter);
        }
    }
}
